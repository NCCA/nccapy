#!/usr/bin/env julia

using Random
using Distributions
using ArgParse

Random.seed!(12345)

function printMatrix(io,array)
  print(io,"[")
  for i = 1:length(array)
    print(io,array[i],",")
  end
  print(io,"],\n")
end


function writePythonVar(io,var,data)
  println(io,var,"=[")
  for i = 1:length(data)
    printMatrix(io,data[i])
  end
  println(io,"]")

end

function generateTests(size,file,loopSize)
  a=Matrix{Float64}[]
  b=Matrix{Float64}[]
  a_times_b=Matrix{Float64}[]
  a_plus_b=Matrix{Float64}[]
  a_minus_b=Matrix{Float64}[]

  dist=Uniform(-100,100)

  for i = 1:loopSize 
      push!(a,rand(dist, size, size))
      push!(b,rand(dist, size, size))
      push!(a_times_b,a[i]*b[i])
      push!(a_plus_b,a[i]+b[i])
      push!(a_minus_b,a[i]-b[i])
  end

  open(file,"w") do io
    println(io,"# file generated by gen_mat4_tests.jl")
    writePythonVar(io,"a",a)
    writePythonVar(io,"b",b)
    writePythonVar(io,"a_times_b",a_times_b)
    writePythonVar(io,"a_plus_b",a_plus_b)
    writePythonVar(io,"a_minus_b",a_minus_b)
    
  end
end

function parse_commandline()
    s = ArgParseSettings()

    @add_arg_table s begin
        "--size", "-s"
            help = "size of the matrix"
            arg_type = Int
            default = 4
        "--name", "-n"
            help = "name of pythonfile"
            arg_type = String
            default = "mat4Data.py"
        "--data", "-d"
            help = "how many test elements in the array"
            arg_type =Int 
            default = 10
    end

    return parse_args(s)
end

function main()
    parsed_args = parse_commandline()
    generateTests(parsed_args["size"],parsed_args["name"],parsed_args["data"])
end

main()